name: Update submodules & deploy

on:
  # 1) автодеплой при любом push в ветку master
  push:
    branches:
      - master               # замените на main, если нужно

  # 2) хук от внешних сервисов для обновления конкретного сабмодуля
  repository_dispatch:
    types:
      - platform-frontend-update
      - landing-frontend-update
      - backend-update
      - admin-frontend-update

jobs:
  # ---------- A. Подтянуть один сабмодуль (только для repository_dispatch) ----------
  update-submodule:
    if: github.event_name == 'repository_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token:     ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Configure Git author
        run: |
          git config --global user.name  "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Detect target submodule
        id: vars
        run: |
          target="${{ github.event.action }}"   # строка вида "<path>-update"
          target="${target%-update}"            # обрезаем суффикс
          echo "target=$target" >> "$GITHUB_OUTPUT"

      - name: Update ${{ steps.vars.outputs.target }}
        run: |
          git submodule update --remote --depth 1 "${{ steps.vars.outputs.target }}"
          git add "${{ steps.vars.outputs.target }}"

      - name: Commit & push if changed
        run: |
          if git diff --staged --quiet; then
            echo "No changes"
          else
            git commit -m "chore: update ${{ steps.vars.outputs.target }} submodule to latest commit [skip ci]"
            git push
          fi

  # ---------- B1. Деплой после repository_dispatch ----------
  deploy_repo_dispatch:
    if: github.event_name == 'repository_dispatch'
    needs: update-submodule
    runs-on: ubuntu-latest

    steps:
      - name: Deploy over SSH (after submodule update)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}

            echo "== Pull =="
            git fetch --all
            git reset --hard origin/master      # или origin/main

            echo "== Update all submodules =="
            git submodule update --init --recursive --remote --depth 1

            echo "== Restart containers =="
            docker compose pull
            docker compose up -d --build

  # ---------- B2. Деплой при обычном push ----------
  deploy_push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest

    steps:
      - name: Deploy over SSH (after push)
        uses: appleboy/ssh-action@v1.0.0
        with:
          host:     ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key:      ${{ secrets.SSH_KEY }}
          port:     ${{ secrets.SSH_PORT }}
          script: |
            set -e
            cd ${{ secrets.PROJECT_PATH }}

            echo "== Pull =="
            git fetch --all
            git reset --hard origin/master

            echo "== Update all submodules =="
            git submodule update --init --recursive --remote --depth 1

            echo "== Restart containers =="
            docker compose pull
            docker compose up -d --build
