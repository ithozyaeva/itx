services:
  nginx:
    image: nginx:latest
    ports:
      - "4002:80"
      - "4003:443"
    volumes:
      - ./_nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./_nginx/conf.d/${BUILD_TYPE}.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certbot/webroot:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./static:/static
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - backend
    #     condition: service_healthy
    networks:
      - itx-network

  certbot:
    image: certbot/certbot
    profiles: ["prod"]
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - itx-network

  database: 
    image: postgres:15
    container_name: database
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - itx-network

  backend: 
    build:
      context: ./backend
    container_name: backend
    depends_on:
      database:
        condition: service_healthy
    env_file: ./backend/.env
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:3000/api/healthcheck"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s
    networks:
      - itx-network

  landing-frontend:
    container_name: landing-frontend
    build:
      context: ./landing-frontend
    volumes:
      - ./static/landing-frontend:/static/landing-frontend
    networks:
      - itx-network

  platform-frontend:
    container_name: platform-frontend
    build:
      context: ./platform-frontend
    volumes:
      - ./static/platform-frontend:/static/platform-frontend
    networks:
      - itx-network

  admin-frontend:
    container_name: admin-frontend
    build:
      context: ./admin-frontend
    volumes:
      - ./static/admin-frontend:/static/admin-frontend
    depends_on:
      - backend
    env_file: ./admin-frontend/.env
    networks:
      - itx-network
  
volumes:
  pgdata:
  certbot_conf:
  certbot_www:

networks:
  itx-network: